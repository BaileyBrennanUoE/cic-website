{"version":3,"sources":["components/Home.jsx","api/cpuQuizQuestions.js","components/Quiz/Question.js","components/Quiz/QuestionCount.js","components/Quiz/AnswerOption.js","components/Quiz/Quiz.js","components/Quiz/Result.js","components/CPU/CPU_Quiz.jsx","components/CPU/CPU_Video.jsx","components/CPU/CPU_Revision.jsx","components/CPU/CPU.jsx","components/Computer/Computer.jsx","components/RAM/RAM_Quiz.jsx","components/RAM/RAM_Video.jsx","components/RAM/RAM_Revision.jsx","components/RAM/Ram.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","quizQuestions","question","answers","type","content","Question","props","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","questionId","questionTotal","answerOptions","map","key","propsTypes","PropTypes","string","isRequired","array","number","func","Result","prop","correctAnswers","CPU_Quiz","state","answersCount","result","handleAnswerSelected","bind","SHUFFLED_ANSWER_OPTIONS","shuffleArray","this","setState","tempVal","randomIndex","currentIndex","length","Math","floor","random","CORRECT_ANSWERS","COUNTER","QUESTION_ID","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","renderResult","renderQuiz","CPU_Video","src","width","height","allowfullscreen","webkitallowfullscreen","mozAllowFullScreen","allow","sandbox","frameborder","title","CPU_Revision","CPU","to","activeClassName","path","Computer","RAM_Quiz","RAM_Video","RAM_Revision","Ram","App","dropdowns","document","querySelectorAll","M","Dropdown","init","inDuration","outDuration","hover","coverTrigger","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c54480ef.chunk.js","sourcesContent":["import React, { Component} from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"Home\">\n                This is the homepage.\n            </div>\n        )\n    }\n}\n\nexport default Home;","var quizQuestions = [\n    {\n        question: \"What does the clock speed indicate?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Tasks per second\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"CPU cores\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"How much storage the CPU has\"\n            }\n        ]\n    },\n    {\n        question: \"What type of CPU does a desktop computer have?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"CISC\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"RISC\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"DISCO\"\n            }\n        ]\n    },\n    {\n        question: \"What is the cache inside a CPU?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Super fast storage\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"The part where calculcations are done\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"The part that manages tasks\"\n            }\n        ]\n    },\n    {\n        question: \"How much faster is a dual core CPU than a single core CPU?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"under twice as fast\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"twice as fast\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"over twice as fast\"\n            }\n        ]\n    },\n    {\n        question: \"If a CPU overheats, this can damaged files saved on the PC\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"True\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"False\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"a CPU cannot overheat\"\n            }\n        ]\n    }\n  ];\n  \n  export default quizQuestions;\n","//following tutorial @ https://mitchgavan.com/react-quiz/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n    return (\n        <div className=\"question section\">\n            <blockquote className=\"flow-text\">\n                {props.content}\n            </blockquote>\n        </div>\n    );\n}\n\nQuestion.propTypes = {\n    content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n    return (\n        <div className=\"questionCount\">\n            Question <span>{props.counter}</span> of <span>{props.total}</span>\n        </div>\n    );\n}\n\nQuestionCount.propTypes = {\n    counter: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n    return (\n        <li className=\"answerOption\">\n            <input\n                type=\"radio\"\n                className=\"radioCustomButton\"\n                name=\"radioGroup\"\n                checked={props.answerType == props.answer}\n                id={props.answerType}\n                value={props.answerType}\n                disabled={props.answer}\n                onChange={props.onAnswerSelected}\n            />\n            <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n                {props.answerContent}\n            </label>\n        </li>\n    );\n}\n\nAnswerOption.propTypes = {\n    answerType: PropTypes.string.isRequired,\n    answerContent: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Quiz/Question';\nimport QuestionCount from '../Quiz/QuestionCount';\nimport AnswerOption from '../Quiz/AnswerOption';\n\nfunction Quiz(props) {\n    function renderAnswerOptions(key) {\n        return(\n            <AnswerOption\n                key={key.content}\n                answerContent={key.content}\n                answerType={key.type}\n                answer={props.answer}\n                questionId={props.questionId}\n                onAnswerSelected={props.onAnswerSelected}\n            />\n        );\n    }\n    return (\n        <div className=\"quiz section\">\n            <QuestionCount\n                counter={props.questionId}\n                total={props.questionTotal}\n            />\n            <Question content={props.question} />\n            <div className=\"containter row\">\n                <div className=\"col s12\">\n                    <ul className=\"answerOptions\">\n                        {props.answerOptions.map(renderAnswerOptions)}\n                    </ul>\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nQuiz.propsTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    counter: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Result(prop) {\n    return (\n        <div className=\"result section\">\n                <blockquote className=\"flow-text\">\n                    You got {prop.correctAnswers} out of {prop.questionTotal} correct <br/>\n                    {prop.correctAnswers===prop.questionTotal  ? (\n                        <p>Well done you got full marks!</p>\n                    ) : (\n                        <p>Perhaps watch the video again or maybe look at the revision sheet!</p>\n                    )}\n                </blockquote>\n        </div>\n    );\n}\n\nResult.propTypes = {\n    questionTotal: PropTypes.number.isRequired,\n    correctAnswers: PropTypes.number.isRequired,\n    isFinished: PropTypes.number.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\r\nimport quizQuestions from '../../api/cpuQuizQuestions';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Result from '../Quiz/Result';\r\n\r\nclass CPU_Quiz extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      correctAnswers: 0,\r\n      result: ''\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const SHUFFLED_ANSWER_OPTIONS = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: SHUFFLED_ANSWER_OPTIONS[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, tempVal, randomIndex;\r\n\r\n    //While there remain elements to shuffle\r\n    while (0 !== currentIndex) {\r\n\r\n      //Pick a remaining element\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      //swap it with the current element\r\n      tempVal = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = tempVal;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n    if(answer === 'Correct') {\r\n      const CORRECT_ANSWERS = this.state.correctAnswers + 1;\r\n      this.setState({ correctAnswers: CORRECT_ANSWERS }); \r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const COUNTER = this.state.counter +1;\r\n    const QUESTION_ID = this.state.questionId + 1;\r\n    this.setState({\r\n      counter: COUNTER,\r\n      questionId: QUESTION_ID,\r\n      question: quizQuestions[COUNTER].question,\r\n      answerOptions: quizQuestions[COUNTER].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  getResults() {\r\n    return 'finished';\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undertermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz \r\n          answer={this.state.answer}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={quizQuestions.length}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result \r\n        correctAnswers={this.state.correctAnswers}\r\n        questionTotal={quizQuestions.length}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Quiz;","import React, { Component } from 'react';\r\n\r\nclass CPU_Video extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"video-container\">\r\n                    <iframe className=\"col s12\" id=\"kaltura_player\" src=\"https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_f91l1g3r&flashvars[streamerType]=auto&amp;flashvars[localizationCode]=en&amp;flashvars[leadWithHTML5]=true&amp;flashvars[sideBarContainer.plugin]=true&amp;flashvars[sideBarContainer.position]=left&amp;flashvars[sideBarContainer.clickToClose]=true&amp;flashvars[chapters.plugin]=true&amp;flashvars[chapters.layout]=vertical&amp;flashvars[chapters.thumbnailRotator]=false&amp;flashvars[streamSelector.plugin]=true&amp;flashvars[EmbedPlayer.SpinnerTarget]=videoHolder&amp;flashvars[dualScreen.plugin]=true&amp;flashvars[Kaltura.addCrossoriginToIframe]=true&amp;&wid=1_u40zg6b4\" width=\"608\" height=\"402\" allowfullscreen webkitallowfullscreen mozAllowFullScreen allow=\"autoplay *; fullscreen *; encrypted-media *\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation allow-pointer-lock allow-popups allow-modals allow-orientation-lock allow-popups-to-escape-sandbox allow-presentation allow-top-navigation-by-user-activation\" frameborder=\"0\" title=\"Kaltura Player\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Video;","import React, { Component } from 'react';\r\n\r\nclass CPU_Revision extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"section\">\r\n            <blockquote  className=\"flow-text\">\r\n                Join Mr. Rex on his latest adventure in exploring the inner workings of a CPU <br/>\r\n                Today we will learn about <br/>\r\n                &emsp; Cores   <br/>\r\n                &emsp; Caches  <br/>\r\n                &emsp; Clock speed <br/>\r\n                &emsp; Types of CPUs\r\n            </blockquote>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Revision;","import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport CPU_Quiz from '../CPU/CPU_Quiz';\nimport CPU_Video from '../CPU/CPU_Video';\nimport CPU_Revision from '../CPU/CPU_Revision';\n\nclass CPU extends Component {\n    render() {\n        return (\n            <div className=\"CPU container flex\">\n                <Router>\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">CPU</a>\n                                <ul>\n                                    <li>\n                                        <NavLink \n                                            to=\"/CPU_Video\" \n                                            activeClassName=\"selected\">\n                                            Video\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink\n                                            to=\"/CPU_Revision\"\n                                            activeClassName=\"selected\">\n                                            Info Sheet    \n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/CPU_Quiz\" \n                                            activeClassName=\"selected\">\n                                            Quiz\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>        \n                        <Switch>\n                            <Route path=\"/CPU_Video\">\n                                <CPU_Video />\n                            </Route>\n                            <Route path=\"/CPU_Revision\">\n                                <CPU_Revision />\n                            </Route>\n                            <Route path=\"/CPU_Quiz\">\n                                <CPU_Quiz />\n                            </Route>\n                        </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default CPU;","import React, { Component} from 'react';\n\nclass Computer extends Component {\n    render() {\n        return (\n            <div className=\"Computer\">\n                This is the computer page.\n            </div>\n        )\n    }\n}\n\nexport default Computer;","import React, { Component } from 'react';\r\nimport quizQuestions from '../../api/cpuQuizQuestions';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Result from '../Quiz/Result';\r\n\r\nclass RAM_Quiz extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      correctAnswers: 0,\r\n      result: ''\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const SHUFFLED_ANSWER_OPTIONS = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: SHUFFLED_ANSWER_OPTIONS[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, tempVal, randomIndex;\r\n\r\n    //While there remain elements to shuffle\r\n    while (0 !== currentIndex) {\r\n\r\n      //Pick a remaining element\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      //swap it with the current element\r\n      tempVal = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = tempVal;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n    if(answer === 'Correct') {\r\n      const CORRECT_ANSWERS = this.state.correctAnswers + 1;\r\n      this.setState({ correctAnswers: CORRECT_ANSWERS }); \r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const COUNTER = this.state.counter +1;\r\n    const QUESTION_ID = this.state.questionId + 1;\r\n    this.setState({\r\n      counter: COUNTER,\r\n      questionId: QUESTION_ID,\r\n      question: quizQuestions[COUNTER].question,\r\n      answerOptions: quizQuestions[COUNTER].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  getResults() {\r\n    return 'finished';\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undertermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz \r\n          answer={this.state.answer}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={quizQuestions.length}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result \r\n        correctAnswers={this.state.correctAnswers}\r\n        questionTotal={quizQuestions.length}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RAM_Quiz;","import React, { Component } from 'react';\r\n\r\nclass RAM_Video extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"video-container\">\r\n                    <iframe className=\"col s12\" id=\"kaltura_player\" src=\"https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_gg4fjudj&flashvars[streamerType]=auto&amp;flashvars[localizationCode]=en&amp;flashvars[leadWithHTML5]=true&amp;flashvars[sideBarContainer.plugin]=true&amp;flashvars[sideBarContainer.position]=left&amp;flashvars[sideBarContainer.clickToClose]=true&amp;flashvars[chapters.plugin]=true&amp;flashvars[chapters.layout]=vertical&amp;flashvars[chapters.thumbnailRotator]=false&amp;flashvars[streamSelector.plugin]=true&amp;flashvars[EmbedPlayer.SpinnerTarget]=videoHolder&amp;flashvars[dualScreen.plugin]=true&amp;flashvars[Kaltura.addCrossoriginToIframe]=true&amp;&wid=1_ljhhjncd\" width=\"608\" height=\"402\" allowfullscreen webkitallowfullscreen mozAllowFullScreen allow=\"autoplay *; fullscreen *; encrypted-media *\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation allow-pointer-lock allow-popups allow-modals allow-orientation-lock allow-popups-to-escape-sandbox allow-presentation allow-top-navigation-by-user-activation\" frameborder=\"0\" title=\"Kaltura Player\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RAM_Video;","import React, { Component } from 'react';\r\n\r\nclass RAM_Revision extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"section\">\r\n            <blockquote  className=\"flow-text\">\r\n                Join Mr. Rex on his latest adventure in exploring the inner workings of a CPU <br/>\r\n                Today we will learn about <br/>\r\n                &emsp; Cores   <br/>\r\n                &emsp; Caches  <br/>\r\n                &emsp; Clock speed <br/>\r\n                &emsp; Types of CPUs\r\n            </blockquote>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RAM_Revision;","import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport RAM_Quiz from '../RAM/RAM_Quiz';\nimport RAM_Video from '../RAM/RAM_Video';\nimport RAM_Revision from '../RAM/RAM_Revision';\n\nclass Ram extends Component {\n    render() {\n        return (\n            <div className=\"Ram container flex\">\n                <Router>\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">RAM & Storage</a>\n                                <ul>\n                                    <li>\n                                        <NavLink \n                                            to=\"/RAM_Video\" \n                                            activeClassName=\"selected\">\n                                            Video\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink\n                                            to=\"/RAM_Revision\"\n                                            activeClassName=\"selected\">\n                                            Info Sheet    \n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/RAM_Quiz\" \n                                            activeClassName=\"selected\">\n                                            Quiz\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>        \n                        <Switch>\n                            <Route path=\"/RAM_Video\">\n                                <RAM_Video />\n                            </Route>\n                            <Route path=\"/RAM_Revision\">\n                                <RAM_Revision />\n                            </Route>\n                            <Route path=\"/RAM_Quiz\">\n                                <RAM_Quiz />\n                            </Route>\n                        </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default Ram;","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink\r\n} from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\nimport CPU from './components/CPU/CPU';\r\nimport Computer from './components/Computer/Computer';\r\nimport Ram from './components/RAM/Ram';\r\n\r\nimport M from 'materialize-css';\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    let dropdowns = document.querySelectorAll(\".dropdown-trigger\");\r\n    let options = {\r\n      inDuration: 300,\r\n      outDuration: 225,\r\n      hover: true,\r\n      coverTrigger: false\r\n    };\r\n    M.Dropdown.init(dropdowns, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <nav className=\"green darken-3\">\r\n            <div className=\"nav-wrapper\">\r\n              <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\r\n                <li>\r\n                  <NavLink \r\n                    exact to=\"/\" \r\n                    activeClassName=\"selected\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/Computer\" \r\n                    activeClassName=\"selected\">\r\n                    What's in a Computer\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/CPU_Video\" \r\n                    activeClassName=\"selected\">\r\n                    CPU\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/RAM_Video\" \r\n                    activeClassName=\"selected\">\r\n                    RAM vs Storage\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>        \r\n          <Switch>\r\n            <Route path=\"/Computer\">\r\n              <Computer />\r\n            </Route>\r\n            <Route path=\"/CPU_Video\">\r\n              <CPU />\r\n            </Route>\r\n            <Route path=\"/Ram_Video\">\r\n              <Ram />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}