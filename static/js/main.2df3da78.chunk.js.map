{"version":3,"sources":["components/Home.jsx","api/cpuQuizQuestions.js","api/cpuQuizHints.js","components/Quiz/Question.js","components/Quiz/QuestionCount.js","components/Quiz/AnswerOption.js","components/Quiz/Quiz.js","components/Quiz/Result.js","components/CPU/CPU_Quiz.jsx","components/CPU/CPU_Video.jsx","components/CPU/CPU_Revision.jsx","components/CPU/CPU_Practical.jsx","components/CPU/CPU.jsx","api/computerQuizQuestions.js","api/computerQuizHints.js","components/Computer/COMP_Quiz.jsx","components/Computer/COMP_Video.jsx","components/Computer/COMP_Revision.jsx","components/Computer/COMP_Practical.jsx","components/Computer/Computer.jsx","api/ramQuizQuestions.js","api/ramQuizHints.js","components/RAM/RAM_Quiz.jsx","components/RAM/RAM_Video.jsx","components/RAM/RAM_Revision.jsx","components/RAM/RAM_Practical.jsx","components/RAM/Ram.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","quizQuestions","question","answers","type","content","quizHints","Question","props","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","id","value","answerContent","disabled","onChange","onAnswerSelected","htmlFor","Quiz","questionId","questionTotal","answerOptions","map","key","propsTypes","PropTypes","string","isRequired","array","number","func","_renderObject","questionAndAnswers","wrongAnswers","questionKeySet","Object","keys","obj","i","values","includes","Result","prop","correctAnswers","CPU_Quiz","state","answersCount","result","handleAnswerSelected","bind","SHUFFLED_ANSWER_OPTIONS","shuffleArray","this","setState","tempVal","randomIndex","currentIndex","length","Math","floor","random","CORRECT_ANSWERS","COUNTER","QUESTION_ID","event","setUserAnswer","currentTarget","stateQuestion","stateObject","console","log","setTimeout","setNextQuestion","setResults","getResults","renderResult","renderQuiz","CPU_Video","src","width","height","allowfullscreen","webkitallowfullscreen","mozAllowFullScreen","allow","sandbox","frameborder","title","CPU_Revision","CPU_Practical","CPU","to","activeClassName","path","COMP_Quiz","COMP_Video","COMP_Revision","COMP_Practical","Computer","RAM_Quiz","RAM_Video","RAM_Revision","RAM_Practical","Ram","App","dropdowns","document","querySelectorAll","M","Dropdown","init","inDuration","outDuration","hover","coverTrigger","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2df3da78.chunk.js","sourcesContent":["import React, { Component} from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"Home container flex\">\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">Home</a>\n                            </div>\n                        </nav>\n                        <div className=\"App\">\n                            <div className=\"section\">\n                                <div className=\"row\">\n                                <blockquote  className=\"col s5 offset-s1 flow-text\">\n                                        Welcome to Rex Support!<br/>\n                                        <blockquote>\n                                            Here you will learn about loads of different topics about computers! <br/>\n                                            From CPUs to RAM, there are many small parts that play a role in getting screen to show what you want when you want it.\n                                            Here, to the right and below, is a breakdown of the current main topics.\n                                        </blockquote>\n                                </blockquote>\n                                    <blockquote  className=\"col s5 flow-text\">\n                                        What's in a Computer?<br/>\n                                        <blockquote>\n                                            CPU\n                                        </blockquote>\n                                        <blockquote>\n                                            Storage\n                                        </blockquote>\n                                        <blockquote>\n                                            GPU\n                                        </blockquote>\n                                        <blockquote>\n                                            Motherboard\n                                        </blockquote>\n                                        <blockquote>\n                                            Power Supply\n                                        </blockquote>\n                                    </blockquote>\n                                    <blockquote  className=\"col s5 offset-s1 flow-text\">\n                                        CPU <br/>\n                                        <blockquote>\n                                        Cores\n                                        </blockquote>\n                                        <blockquote>\n                                        Clock Speed\n                                        </blockquote>\n                                        <blockquote>\n                                        Cache\n                                        </blockquote>\n                                        <blockquote>\n                                        Types of CPU\n                                        </blockquote>\n                                    </blockquote>\n                                    <blockquote  className=\"col s5 flow-text\">\n                                        RAM vs Storage <br/>\n                                        <blockquote>\n                                        RAM\n                                        </blockquote>\n                                        <blockquote>\n                                        Storage\n                                        </blockquote>\n                                        <blockquote>\n                                        HDD\n                                        </blockquote>\n                                        <blockquote>\n                                        SSD\n                                        </blockquote>\n                                    </blockquote>\n                                </div>\n                            </div>\n                        </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","var quizQuestions = [\n    {\n        question: \"What does the clock speed tell us?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Tasks per second\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"CPU cores\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"How much storage the CPU has\"\n            }\n        ]\n    },\n    {\n        question: \"What type of CPU does a desktop computer have?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"CISC\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"RISC\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"DISCO\"\n            }\n        ]\n    },\n    {\n        question: \"What is the cache inside a CPU?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Super fast storage\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"The part where calculcations are done\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"The part that manages tasks\"\n            }\n        ]\n    },\n    {\n        question: \"How much faster is a two core CPU than a single core CPU?\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"under twice as fast\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"twice as fast\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"over twice as fast\"\n            }\n        ]\n    },\n    {\n        question: \"If a CPU gets too hot, this can damaged files saved on the PC\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"True\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"False\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"a CPU cannot get too hot\"\n            }\n        ]\n    }\n  ];\n  \n  export default quizQuestions;\n","var quizHints = {\r\n    \"What part is the brain of the computer?\" : \"Look at the first point under Clock Speed\",\r\n    \"What does the CPU use as a quick notebook during tasks?\" : \"Look at the first point under Types of CPU\",\r\n    \"What helps the CPU show pictures on your screen?\": \"Look at the first point under Cache\",\r\n    \"What do you put the CPU, RAM and GPU into so they can talk together?\": \"Look at the third point under CPU Cores\",\r\n    \"What gives the computer the electricity to run?\": \"Look at the third point under Clock Speed\"\r\n};\r\n  \r\n  export default quizHints;\r\n","//following tutorial @ https://mitchgavan.com/react-quiz/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n    return (\n        <div className=\"question section\">\n            <blockquote className=\"flow-text\">\n                {props.content}\n            </blockquote>\n        </div>\n    );\n}\n\nQuestion.propTypes = {\n    content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n    return (\n        <div className=\"questionCount\">\n            Question <span>{props.counter}</span> of <span>{props.total}</span>\n        </div>\n    );\n}\n\nQuestionCount.propTypes = {\n    counter: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n    return (\n        <li className=\"answerOption\">\n            <input\n                type=\"radio\"\n                className=\"radioCustomButton\"\n                name=\"radioGroup\"\n                checked={props.answerType == props.answer}\n                id={props.answerType}\n                value={props.answerContent}\n                disabled={props.answer}\n                onChange={props.onAnswerSelected}\n            />\n            <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n                {props.answerContent}\n            </label>\n        </li>\n    );\n}\n\nAnswerOption.propTypes = {\n    answerType: PropTypes.string.isRequired,\n    answerContent: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Quiz/Question';\nimport QuestionCount from '../Quiz/QuestionCount';\nimport AnswerOption from '../Quiz/AnswerOption';\n\nfunction Quiz(props) {\n    function renderAnswerOptions(key) {\n        return(\n            <AnswerOption\n                key={key.content}\n                answerContent={key.content}\n                answerType={key.type}\n                answer={props.answer}\n                questionId={props.questionId}\n                onAnswerSelected={props.onAnswerSelected}\n            />\n        );\n    }\n    return (\n        <div className=\"quiz section\">\n            <QuestionCount\n                counter={props.questionId}\n                total={props.questionTotal}\n            />\n            <Question content={props.question} />\n            <div className=\"containter row\">\n                <div className=\"col s12\">\n                    <ul className=\"answerOptions\">\n                        {props.answerOptions.map(renderAnswerOptions)}\n                    </ul>\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nQuiz.propsTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    counter: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Result(prop) {\n    return (\n        <div className=\"result section\">\n                    <blockquote className=\"flow-text\">\n                    You got {prop.correctAnswers} out of {prop.questionTotal} correct! Check below for your results:<br/>\n                    </blockquote>\n                    {/* {prop.correctAnswers===prop.questionTotal  ? (\n                        <p>Well done you got full marks!</p>\n                    ) : (\n                        <p>Watch the video and look over the info sheet again then try again!</p>\n                    )} */}\n                    <div className=\"row\">\n                    {_renderObject(prop.questionAndAnswers, prop.wrongAnswers, prop.quizHints)}\n                    </div>\n        </div>\n    );\n}\n\nfunction _renderObject(questionAndAnswers, wrongAnswers, quizHints){\n    var questionKeySet = Object.keys(questionAndAnswers);\n    return Object.keys(questionAndAnswers).map((obj, i) => {\n        return (\n            <div>\n                {Object.values(wrongAnswers).includes(questionKeySet[i]) ? (\n                        <div className=\"col s7 offset-s2 card-panel red lighten-2 flow-text\">\n                            {questionKeySet[i]} <br/>\n                            &emsp; &emsp; Answer: {questionAndAnswers[obj]} <br/>\n                            &emsp; &emsp; Hint: {quizHints[questionKeySet[i]]}\n                        </div>\n                    ) : (\n                        <div className=\"col s7 offset-s2 card-panel green lighten-2 flow-text\">\n                            {questionKeySet[i]} <br/>&emsp; &emsp; Answer: {questionAndAnswers[obj]}\n                        </div>\n                    ) \n                }\n            </div>\n        )\n    })\n}\n\nResult.propTypes = {\n    questionTotal: PropTypes.number.isRequired,\n    correctAnswers: PropTypes.number.isRequired,\n    wrongAnswers: PropTypes.object.isRequired,\n    questionAndAnswers: PropTypes.object.isRequired,\n    isFinished: PropTypes.number.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\r\nimport quizQuestions from '../../api/cpuQuizQuestions';\r\nimport quizHints from '../../api/cpuQuizHints';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Result from '../Quiz/Result';\r\n\r\nclass CPU_Quiz extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      correctAnswers: 0,\r\n      result: '',\r\n      wrongAnswers: {},\r\n      questionAndAnswers: {}\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const SHUFFLED_ANSWER_OPTIONS = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: SHUFFLED_ANSWER_OPTIONS[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, tempVal, randomIndex;\r\n\r\n    //While there remain elements to shuffle\r\n    while (0 !== currentIndex) {\r\n\r\n      //Pick a remaining element\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      //swap it with the current element\r\n      tempVal = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = tempVal;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n    if(answer === 'Correct') {\r\n      const CORRECT_ANSWERS = this.state.correctAnswers + 1;\r\n      this.setState({ correctAnswers: CORRECT_ANSWERS }); \r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const COUNTER = this.state.counter +1;\r\n    const QUESTION_ID = this.state.questionId + 1;\r\n    this.setState({\r\n      counter: COUNTER,\r\n      questionId: QUESTION_ID,\r\n      question: quizQuestions[COUNTER].question,\r\n      answerOptions: quizQuestions[COUNTER].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.id);\r\n\r\n    var stateQuestion = this.state.question;\r\n    var stateObject = function() {\r\n      var returnObj = {\r\n        'question' : stateQuestion,\r\n        'answer' : this.currentTarget.value\r\n      };\r\n         return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState((state) => ({\r\n      questionAndAnswers: {\r\n        ...state.questionAndAnswers,\r\n        [stateObject.question] : stateObject.answer\r\n      }\r\n    }));\r\n\r\n    if(event.currentTarget.id === 'Wrong'){\r\n      console.log(\"Changing wrongAnswers\");\r\n      this.setState((state) => ({\r\n        wrongAnswers: {\r\n          ...state.wrongAnswers,\r\n          [state.counter]: (state.question)\r\n        }\r\n      }));\r\n    }\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  getResults() {\r\n    return 'finished';\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undertermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    console.log(quizHints);\r\n    return (\r\n      <Quiz \r\n          answer={this.state.answer}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={quizQuestions.length}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result \r\n        correctAnswers={this.state.correctAnswers}\r\n        questionTotal={quizQuestions.length}\r\n        questionAndAnswers={this.state.questionAndAnswers}\r\n        wrongAnswers={this.state.wrongAnswers}\r\n        quizHints={quizHints}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Quiz;","import React, { Component } from 'react';\r\n\r\nclass CPU_Video extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"video-container\">\r\n                    <iframe className=\"col s12\" id=\"kaltura_player\" src=\"https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_f91l1g3r&flashvars[streamerType]=auto&amp;flashvars[localizationCode]=en&amp;flashvars[leadWithHTML5]=true&amp;flashvars[sideBarContainer.plugin]=true&amp;flashvars[sideBarContainer.position]=left&amp;flashvars[sideBarContainer.clickToClose]=true&amp;flashvars[chapters.plugin]=true&amp;flashvars[chapters.layout]=vertical&amp;flashvars[chapters.thumbnailRotator]=false&amp;flashvars[streamSelector.plugin]=true&amp;flashvars[EmbedPlayer.SpinnerTarget]=videoHolder&amp;flashvars[dualScreen.plugin]=true&amp;flashvars[Kaltura.addCrossoriginToIframe]=true&amp;&wid=1_u40zg6b4\" width=\"608\" height=\"402\" allowfullscreen webkitallowfullscreen mozAllowFullScreen allow=\"autoplay *; fullscreen *; encrypted-media *\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation allow-pointer-lock allow-popups allow-modals allow-orientation-lock allow-popups-to-escape-sandbox allow-presentation allow-top-navigation-by-user-activation\" frameborder=\"0\" title=\"Kaltura Player\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Video;","import React, { Component } from 'react';\r\n\r\nclass CPU_Revision extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"section\">\r\n          <div className=\"row\">\r\n            <blockquote  className=\"col s5 offset-s1 flow-text\">\r\n                CPU Cores <br/>\r\n                <blockquote>\r\n                  The main number crunching centre\r\n                </blockquote>\r\n                <blockquote>\r\n                  Home to the Cache\r\n                </blockquote>\r\n                <blockquote>\r\n                  More cores, the faster it is but its speed is not additive (e.g. a dual core CPU is not as fast as 2 single core CPUs together)\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 flow-text\">\r\n                Clock Speed <br/>\r\n                <blockquote>\r\n                  Tells us how fast the CPU is\r\n                </blockquote>\r\n                <blockquote>\r\n                  Shown in Gigahertz(Hz)\r\n                </blockquote>\r\n                <blockquote>\r\n                  The higher the clock speed, the hotter the CPU gets - too hot and it can destroy files on the computer even!\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 offset-s1 flow-text\">\r\n                Cache <br/>\r\n                <blockquote>\r\n                  Small, super fast storage for the CPU\r\n                </blockquote>\r\n                <blockquote>\r\n                  Like RAM but much smaller - very expensive as well\r\n                </blockquote>\r\n                <blockquote>\r\n                  The CPU uses cache like its memory, most common tasks are kept there\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 flow-text\">\r\n                Types of CPU <br/>\r\n                <blockquote>\r\n                  CISC - found in desktop computers, larger and power hungry like super cars\r\n                </blockquote>\r\n                <blockquote>\r\n                  RISC - found in smartphones/tablets, smaller and less power greedy like a tiny electric car\r\n                </blockquote>\r\n            </blockquote>\r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Revision;","import React, { Component } from 'react';\r\n\r\nclass CPU_Practical extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"col s6\">\r\n                    <blockquote className=\"flow-text\">\r\n                        Part 1\r\n                    </blockquote>\r\n                    Get four pieces of paper and on each, write down the following information on these family members:<br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s5 offset-s1\">\r\n                        Bob\r\n                        <ul>\r\n                            <li>Bob is Lucy's dad</li>\r\n                            <li>Bob is Dylan's brother</li>\r\n                            <li>Bob is married to Megan</li>\r\n                            <li>Bob is 40</li>\r\n                        </ul>\r\n                        </div>\r\n                        <div className=\"col s5\">\r\n                        Lucy\r\n                        <ul>\r\n                            <li>Lucy is Dylan's niece</li>\r\n                            <li>Lucy is Megan's daughter</li>\r\n                            <li>Lucy is half of Bob's age</li>\r\n                            <li>Lucy likes dancing</li>\r\n                        </ul>\r\n                        </div>\r\n                        <div className=\"col s5 offset-s1\">\r\n                        Dylan\r\n                        <ul>\r\n                            <li>Dylan has one brother</li>\r\n                            <li>Dylan is a doctor</li>\r\n                            <li>Dylan likes cycling</li>\r\n                            <li>Dylan is a twin</li>\r\n                        </ul>\r\n                        </div>\r\n                        <div className=\"col s5\">\r\n                        Megan\r\n                        <ul>\r\n                            <li>Megan is the smallest in her family</li>\r\n                            <li>Megan taught her daughter to dance</li>\r\n                            <li>Megan gave her husband's twin a bike</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                    Try and memorise the cards. Get a stopwatch ready, now put the pieces of paper in a bag and try and answer the questions below, \r\n                    each time pulling out a bit of paper randomly, until you can answer the question and returning them before the next question(this can be more than one bit of paper!).<br/>\r\n                    When ready click below to reveal the questions:\r\n                    <details>\r\n                        <summary>Questions</summary>\r\n                        <ul>\r\n                            <li>How old is Lucy?</li>\r\n                            <li>Who got Bob's daughter into her hobby?</li>\r\n                            <li>Who bought Bob's twin a bike?</li>\r\n                            <li>Who could have helped Bob when he hurt himself at his birthday party?</li>\r\n                        </ul>\r\n                    </details> \r\n                    Stop the timer! How fast did you complete that? Bet that could've been easier to do if you had a common card out right?\r\n                </div>\r\n                <div className=\"col s6\">\r\n                    <blockquote className=\"flow-text\">\r\n                        Part 2\r\n                    </blockquote>\r\n                    Keep Bob's card out on your desk and reset the timer. Answer these new sets of questions, using the same rules as before (putting back each card that is not Bob's after each question).\r\n                    See how much quicker you can do this now that you have a list of commonly used facts right beside you!\r\n                    <details>\r\n                        <summary>Questions</summary>\r\n                        <ul>\r\n                            <li>What relation is the smallest person in the family to Bob?</li>\r\n                            <li>How old is Dylan?</li>\r\n                            <li>How old will Bob be when Lucy is 30?</li>\r\n                            <li>What is Lucy's uncle's hobby?</li>\r\n                        </ul>\r\n                    </details> \r\n                    How did that run go? Was it much easier and quicker? <br/>\r\n                    The same goes for the CPU! Imagine the bag as the computer's RAM and the desk as the CPU's cache, it keeps the most commonly used data on the desk so it can answer common questions super fast!\r\n                    <blockquote className=\"flow-text\">\r\n                        Further practical ideas:\r\n                    </blockquote>\r\n                    If you thought that was fun, try teaming up with another person and doing Parts 1 & 2 again! Except when the timer goes split the tasks evenly then do the questions. This will give you a good idea how\r\n                    multi-core CPUs work!\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CPU_Practical;","import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport CPU_Quiz from '../CPU/CPU_Quiz';\nimport CPU_Video from '../CPU/CPU_Video';\nimport CPU_Revision from '../CPU/CPU_Revision';\nimport CPU_Practical from '../CPU/CPU_Practical';\n\nclass CPU extends Component {\n    render() {\n        return (\n            <div className=\"CPU container flex\">\n                <Router>\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">CPU</a>\n                                <ul>\n                                    <li>\n                                        <NavLink \n                                            to=\"/CPU_Video\" \n                                            activeClassName=\"selected\">\n                                            Video\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink\n                                            to=\"/CPU_Revision\"\n                                            activeClassName=\"selected\">\n                                            Info Sheet    \n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/CPU_Quiz\" \n                                            activeClassName=\"selected\">\n                                            Quiz\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/CPU_Practical\" \n                                            activeClassName=\"selected\">\n                                            Practical\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>        \n                        <Switch>\n                            <Route path=\"/CPU_Video\">\n                                <CPU_Video />\n                            </Route>\n                            <Route path=\"/CPU_Revision\">\n                                <CPU_Revision />\n                            </Route>\n                            <Route path=\"/CPU_Quiz\">\n                                <CPU_Quiz />\n                            </Route>\n                            <Route path=\"/CPU_Practical\">\n                                <CPU_Practical />\n                            </Route>\n                        </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default CPU;","var quizQuestions = [\r\n    {\r\n        question: \"What part is the brain of the computer?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"CPU\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"GPU\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"RAM\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What does the CPU use as a quick notebook during tasks?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"RAM\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Storage\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"GPU\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What helps the CPU show pictures on your screen?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"GPU\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Power Supply\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"It does not need any help\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What do you put the CPU, RAM and GPU into so they can talk together?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"Motherboard\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Parentboard\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Fatherboard\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What gives the computer the electricity to run?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"Power Supply\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Juice Maker\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Hamster wheel\"\r\n            }\r\n        ]\r\n    }\r\n  ];\r\n  \r\n  export default quizQuestions;\r\n","var quizHints = {\r\n    \"What part is the brain of the computer?\": \"Look at the first point under CPU\",\r\n    \"What does the CPU use as a quick notebook during tasks?\" : \"Look at the first point under RAM\",\r\n    \"What helps the CPU show pictures on your screen?\" : \"Look at the GPU point\",\r\n    \"What do you put the CPU, RAM and GPU into so they can talk together?\": \"Look at the first point under Motherboard\",\r\n    \"What gives the computer the electricity to run?\": \"Look at the second point under Power Supply\"\r\n};\r\n  \r\n  export default quizHints;\r\n","import React, { Component } from 'react';\r\nimport quizQuestions from '../../api/computerQuizQuestions';\r\nimport quizHints from '../../api/computerQuizHints';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Result from '../Quiz/Result';\r\n\r\nclass COMP_Quiz extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      correctAnswers: 0,\r\n      result: '',\r\n      wrongAnswers: {},\r\n      questionAndAnswers: {}\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const SHUFFLED_ANSWER_OPTIONS = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: SHUFFLED_ANSWER_OPTIONS[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, tempVal, randomIndex;\r\n\r\n    //While there remain elements to shuffle\r\n    while (0 !== currentIndex) {\r\n\r\n      //Pick a remaining element\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      //swap it with the current element\r\n      tempVal = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = tempVal;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n    if(answer === 'Correct') {\r\n      const CORRECT_ANSWERS = this.state.correctAnswers + 1;\r\n      this.setState({ correctAnswers: CORRECT_ANSWERS }); \r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const COUNTER = this.state.counter +1;\r\n    const QUESTION_ID = this.state.questionId + 1;\r\n    this.setState({\r\n      counter: COUNTER,\r\n      questionId: QUESTION_ID,\r\n      question: quizQuestions[COUNTER].question,\r\n      answerOptions: quizQuestions[COUNTER].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.id);\r\n\r\n    var stateQuestion = this.state.question;\r\n    var stateObject = function() {\r\n      var returnObj = {\r\n        'question' : stateQuestion,\r\n        'answer' : this.currentTarget.value\r\n      };\r\n         return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState((state) => ({\r\n      questionAndAnswers: {\r\n        ...state.questionAndAnswers,\r\n        [stateObject.question] : stateObject.answer\r\n      }\r\n    }));\r\n\r\n    if(event.currentTarget.id === 'Wrong'){\r\n      console.log(\"Changing wrongAnswers\");\r\n      this.setState((state) => ({\r\n        wrongAnswers: {\r\n          ...state.wrongAnswers,\r\n          [state.counter]: (state.question)\r\n        }\r\n      }));\r\n    }\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  getResults() {\r\n    return 'finished';\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undertermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    console.log(quizHints);\r\n    return (\r\n      <Quiz \r\n          answer={this.state.answer}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={quizQuestions.length}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result \r\n        correctAnswers={this.state.correctAnswers}\r\n        questionTotal={quizQuestions.length}\r\n        questionAndAnswers={this.state.questionAndAnswers}\r\n        wrongAnswers={this.state.wrongAnswers}\r\n        quizHints={quizHints}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default COMP_Quiz;","import React, { Component } from 'react';\r\n\r\nclass COMP_Video extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"video-container\">\r\n                    <iframe className=\"col s12\" id=\"kaltura_player\" src=\"https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_c2jevecr&flashvars[streamerType]=auto&amp;flashvars[localizationCode]=en&amp;flashvars[forceMobileHTML5]=true&amp;flashvars[Kaltura.addCrossoriginToIframe]=true&amp;&wid=1_xqa02e0c\" width=\"608\" height=\"402\" allowfullscreen webkitallowfullscreen mozAllowFullScreen allow=\"autoplay *; fullscreen *; encrypted-media *\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation allow-pointer-lock allow-popups allow-modals allow-orientation-lock allow-popups-to-escape-sandbox allow-presentation allow-top-navigation-by-user-activation\" frameborder=\"0\" title=\"Kaltura Player\"></iframe>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default COMP_Video;","import React, { Component } from 'react';\r\n\r\nclass COMP_Revision extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"section\">\r\n          <div className=\"row\">\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                CPU <br/>\r\n                <blockquote>\r\n                  The brain of the computer\r\n                </blockquote>\r\n                <blockquote>\r\n                  Can come in many shapes and sizes\r\n                </blockquote>\r\n                <blockquote>\r\n                  Can get too hot, so needs a fan\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                RAM <br/>\r\n                <blockquote>\r\n                  Used like a notebook by the CPU\r\n                </blockquote>\r\n                <blockquote>\r\n                  Keeps information of recent tasks\r\n                </blockquote>\r\n                <blockquote>\r\n                  Is not kept forever, it is deleted once the task is over\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                Storage <br/>\r\n                <blockquote>\r\n                  Stores computer files, like your homework\r\n                </blockquote>\r\n                <blockquote>\r\n                  Is kept until deleted by computer owner\r\n                </blockquote>\r\n                <blockquote>\r\n                  Can be fast or slow, depending on the computer's needs\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                GPU <br/>\r\n                <blockquote>\r\n                  Helps the CPU do sums or show games on your screen when there is too much work for it alone\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                Motherboard <br/>\r\n                <blockquote>\r\n                  Where the CPU, RAM and GPU are placed so they can talk to each other\r\n                </blockquote>\r\n                <blockquote>\r\n                  Spreads the power to each part in the computer\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s4 flow-text\">\r\n                Power Supply <br/>\r\n                <blockquote>\r\n                  Takes the power from your wall and gives it to the Motherboard\r\n                </blockquote>\r\n                <blockquote>\r\n                  Is required to make the computer run\r\n                </blockquote>\r\n            </blockquote>\r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default COMP_Revision;","import React, { Component } from 'react';\r\n\r\nclass COMP_Practical extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <blockquote className=\"flow-text\">\r\n                        Large Practical\r\n                        <blockquote>\r\n                        Try doing the practical activities of the other parts altogether!<br/>\r\n                        Get the bits of paper from the CPU activity and place them out like described in the RAM vs Storage activity. \r\n                        You can add more family members and linked facts about them! <br/>\r\n                        So for every round you have to do the following:\r\n                            <blockquote>Get a question</blockquote>\r\n                            <blockquote>Decide if you need to get the paper from a pile</blockquote>\r\n                            <blockquote>Pick the piece out of the bag</blockquote>\r\n                            <blockquote>Decide if you need more pieces</blockquote>\r\n                            <blockquote>Repeat until you can answer the question!</blockquote>\r\n                        This will give you a good idea of the steps your computer does to do all the things you want it to!\r\n                        </blockquote>\r\n                    </blockquote>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default COMP_Practical;","import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport COMP_Quiz from '../Computer/COMP_Quiz';\nimport COMP_Video from '../Computer/COMP_Video';\nimport COMP_Revision from '../Computer/COMP_Revision';\nimport COMP_Practical from '../Computer/COMP_Practical';\n\nclass Computer extends Component {\n    render() {\n        return (\n            <div className=\"COMP container flex\">\n                <Router>\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">What's in a Computer?</a>\n                                <ul>\n                                    <li>\n                                        <NavLink \n                                            to=\"/COMP_Video\" \n                                            activeClassName=\"selected\">\n                                            Video\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink\n                                            to=\"/COMP_Revision\"\n                                            activeClassName=\"selected\">\n                                            Info Sheet    \n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/COMP_Quiz\" \n                                            activeClassName=\"selected\">\n                                            Quiz\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/COMP_Practical\" \n                                            activeClassName=\"selected\">\n                                            Practical\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>        \n                        <Switch>\n                            <Route path=\"/COMP_Video\">\n                                <COMP_Video />\n                            </Route>\n                            <Route path=\"/COMP_Revision\">\n                                <COMP_Revision />\n                            </Route>\n                            <Route path=\"/COMP_Quiz\">\n                                <COMP_Quiz />\n                            </Route>\n                            <Route path=\"/COMP_Practical\">\n                                <COMP_Practical />\n                            </Route>\n                        </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default Computer;","var quizQuestions = [\r\n    {\r\n        question: \"Are RAM and Storage the same thing?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"False\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"True\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Not exactly, but close enough\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What are RAM and Storage shown in?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"Gigabytes\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Greatbites\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Giantbits\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"The more RAM a computer has the more tasks it can do?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"True\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"False\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"RAM does not change this\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"What does most common type of desktop computer storage?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"Hard Disk Drive\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Solid State Drive\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"USB Drive\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"If you had very little money to spend on storage, what would you buy?\",\r\n        answers: [\r\n            {\r\n                type: \"Correct\",\r\n                content: \"Hard Disk Drive\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"Solid State Drive\"\r\n            },\r\n            {\r\n                type: \"Wrong\",\r\n                content: \"RAM\"\r\n            }\r\n        ]\r\n    }\r\n  ];\r\n  \r\n  export default quizQuestions;\r\n","var quizHints = {\r\n    \"Are RAM and Storage the same thing?\": \"Watch the start of the video again\",\r\n    \"What are RAM and Storage shown in?\" : \"Look at the first few points under RAM/Storage\",\r\n    \"The more RAM a computer has the more tasks it can do?\" : \"Look at the third point under RAM\",\r\n    \"What does most common type of desktop computer storage?\": \"Look at the second point under HDD\",\r\n    \"If you had very little money to spend on storage, what would you buy?\": \"Look at the third point under SSD\"\r\n};\r\n  \r\n  export default quizHints;\r\n","import React, { Component } from 'react';\r\nimport quizQuestions from '../../api/ramQuizQuestions';\r\nimport quizHints from '../../api/ramQuizHints';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Result from '../Quiz/Result';\r\n\r\nclass RAM_Quiz extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      correctAnswers: 0,\r\n      result: '',\r\n      wrongAnswers: {},\r\n      questionAndAnswers: {}\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const SHUFFLED_ANSWER_OPTIONS = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: SHUFFLED_ANSWER_OPTIONS[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, tempVal, randomIndex;\r\n\r\n    //While there remain elements to shuffle\r\n    while (0 !== currentIndex) {\r\n\r\n      //Pick a remaining element\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      //swap it with the current element\r\n      tempVal = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = tempVal;\r\n    }\r\n\r\n    return array;\r\n  }\r\n  \r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n    if(answer === 'Correct') {\r\n      const CORRECT_ANSWERS = this.state.correctAnswers + 1;\r\n      this.setState({ correctAnswers: CORRECT_ANSWERS }); \r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const COUNTER = this.state.counter +1;\r\n    const QUESTION_ID = this.state.questionId + 1;\r\n    this.setState({\r\n      counter: COUNTER,\r\n      questionId: QUESTION_ID,\r\n      question: quizQuestions[COUNTER].question,\r\n      answerOptions: quizQuestions[COUNTER].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.id);\r\n\r\n    var stateQuestion = this.state.question;\r\n    var stateObject = function() {\r\n      var returnObj = {\r\n        'question' : stateQuestion,\r\n        'answer' : this.currentTarget.value\r\n      };\r\n         return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState((state) => ({\r\n      questionAndAnswers: {\r\n        ...state.questionAndAnswers,\r\n        [stateObject.question] : stateObject.answer\r\n      }\r\n    }));\r\n\r\n    if(event.currentTarget.id === 'Wrong'){\r\n      console.log(\"Changing wrongAnswers\");\r\n      this.setState((state) => ({\r\n        wrongAnswers: {\r\n          ...state.wrongAnswers,\r\n          [state.counter]: (state.question)\r\n        }\r\n      }));\r\n    }\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  getResults() {\r\n    return 'finished';\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undertermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    console.log(quizHints);\r\n    return (\r\n      <Quiz \r\n          answer={this.state.answer}\r\n          answerOptions={this.state.answerOptions}\r\n          questionId={this.state.questionId}\r\n          question={this.state.question}\r\n          questionTotal={quizQuestions.length}\r\n          onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result \r\n        correctAnswers={this.state.correctAnswers}\r\n        questionTotal={quizQuestions.length}\r\n        questionAndAnswers={this.state.questionAndAnswers}\r\n        wrongAnswers={this.state.wrongAnswers}\r\n        quizHints={quizHints}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RAM_Quiz;","import React, { Component } from 'react';\r\n\r\nclass RAM_Video extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"video-container\">\r\n                    <iframe className=\"col s12\" id=\"kaltura_player\" src=\"https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_gg4fjudj&flashvars[streamerType]=auto&amp;flashvars[localizationCode]=en&amp;flashvars[leadWithHTML5]=true&amp;flashvars[sideBarContainer.plugin]=true&amp;flashvars[sideBarContainer.position]=left&amp;flashvars[sideBarContainer.clickToClose]=true&amp;flashvars[chapters.plugin]=true&amp;flashvars[chapters.layout]=vertical&amp;flashvars[chapters.thumbnailRotator]=false&amp;flashvars[streamSelector.plugin]=true&amp;flashvars[EmbedPlayer.SpinnerTarget]=videoHolder&amp;flashvars[dualScreen.plugin]=true&amp;flashvars[Kaltura.addCrossoriginToIframe]=true&amp;&wid=1_ljhhjncd\" width=\"608\" height=\"402\" allowfullscreen webkitallowfullscreen mozAllowFullScreen allow=\"autoplay *; fullscreen *; encrypted-media *\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation allow-pointer-lock allow-popups allow-modals allow-orientation-lock allow-popups-to-escape-sandbox allow-presentation allow-top-navigation-by-user-activation\" frameborder=\"0\" title=\"Kaltura Player\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RAM_Video;","import React, { Component } from 'react';\r\n\r\nclass RAM_Revision extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"section\">\r\n          <div className=\"row\">\r\n          <blockquote  className=\"col s5 offset-s1 flow-text\">\r\n                RAM <br/>\r\n                <blockquote>\r\n                  Random Access Memory - or just memory for short\r\n                </blockquote>\r\n                <blockquote>\r\n                  Shown in Gigabytes (GB)\r\n                </blockquote>\r\n                <blockquote>\r\n                  The more Gigabytes means the computer can do more tasks at the same time\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 flow-text\">\r\n                Storage <br/>\r\n                <blockquote>\r\n                Shown in Gigabytes (GB) as well!\r\n                </blockquote>\r\n                <blockquote>\r\n                  Bank of information\r\n                </blockquote>\r\n                <blockquote>\r\n                  Lends RAM bits of information for the CPU's tasks then gets any changes back again\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 offset-s1 flow-text\">\r\n                HDD <br/>\r\n                <blockquote>\r\n                  Hard Disk Drive\r\n                </blockquote>\r\n                <blockquote>\r\n                  Most common type of storage in a desktop computer\r\n                </blockquote>\r\n                <blockquote>\r\n                  Needle inside goes round and reads little dots with magnets\r\n                </blockquote>\r\n            </blockquote>\r\n            <blockquote  className=\"col s5 flow-text\">\r\n                SSD<br/>\r\n                <blockquote>\r\n                  Solid State Drive\r\n                </blockquote>\r\n                <blockquote>\r\n                  Most common type of storage in phones\r\n                </blockquote>\r\n                <blockquote>\r\n                  Has no moving parts, work like a slower version of RAM\r\n                </blockquote>\r\n                <blockquote>\r\n                  Costs much more per GB than HDD\r\n                </blockquote>\r\n            </blockquote>\r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RAM_Revision;","import React, { Component } from 'react';\r\n\r\nclass RAM_Practical extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <div className=\"row section\">\r\n                <div className=\"col s6\">\r\n                    <blockquote className=\"flow-text\">\r\n                        Part 1\r\n                    </blockquote>\r\n                    Get eight small pieces of paper, and write on them:\r\n                    <div className=\"row\">\r\n                        <blockquote className=\"col s2 offset-s1\">Bob</blockquote>\r\n                        <blockquote className=\"col s2\">Lucy</blockquote>\r\n                        <blockquote className=\"col s2\">Dylan</blockquote>\r\n                        <blockquote className=\"col s2\">Megan</blockquote>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <blockquote className=\"col s2 offset-s1\">Sean</blockquote>\r\n                        <blockquote className=\"col s2\">Rebecca</blockquote>\r\n                        <blockquote className=\"col s2\">Harry</blockquote>\r\n                        <blockquote className=\"col s2\">Alice</blockquote>\r\n                    </div>\r\n                    Place them in groups in even groups on any number of different spread out surfaces. Prepare a bag and a stopwatch, when you start\r\n                    the timer, fetch the names from the bag randomly and say the name aloud once you've picked it out. If the name is not in the bag go to the surface it is and then put it in the bag. <br/>\r\n                    You may only have four names in the bag at any one time, if you need to get a new name, take a bit of paper from the bag out and replace it with \r\n                    the new bit.\r\n                    <details>\r\n                        <summary>Names</summary>\r\n                        <ul>\r\n                            <li>Bob</li>\r\n                            <li>Dylan</li>\r\n                            <li>Rebecca</li>\r\n                            <li>Sean</li>\r\n                            <li>Dylan</li>\r\n                            <li>Lucy</li>\r\n                            <li>Megan</li>\r\n                            <li>Harry</li>\r\n                            <li>Sean</li>\r\n                            <li>Alice</li>\r\n                        </ul>\r\n                    </details>\r\n                    How did that go? How fast did you get? Do this activity a few times and see how the times compare when you pull different names out randomly. \r\n                </div>\r\n                <div className=\"col s6\">\r\n                    <blockquote className=\"flow-text\">\r\n                        Part 2\r\n                    </blockquote>\r\n                    Take all the bits of paper and place them on your desk in groups of two. We are going to do the previous part again with this new set up. <br/>\r\n                    See how much faster this is? In the first part, you acted like a Hard Disk Drive going long distances to get the information for the bag (RAM).\r\n                    Where in the second part you acted like a Solid State Drive, getting the information from small piles of piles with very little movement!\r\n                    <blockquote className=\"flow-text\">\r\n                        Further practical ideas: \r\n                    </blockquote>\r\n                    Try both parts out with different sets of rules!<br/>\r\n                    For example:\r\n                        <ul>\r\n                            <li>&emsp; add more bits of paper</li>\r\n                            <li>&emsp; in Part 1 add more or less different surfaces</li>\r\n                            <li>&emsp; Allow more/less bits of paper in the bag</li>\r\n                        </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RAM_Practical;","import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom';\nimport RAM_Quiz from '../RAM/RAM_Quiz';\nimport RAM_Video from '../RAM/RAM_Video';\nimport RAM_Revision from '../RAM/RAM_Revision';\nimport RAM_Practical from '../RAM/RAM_Practical';\n\nclass Ram extends Component {\n    render() {\n        return (\n            <div className=\"Ram container flex\">\n                <Router>\n                        <nav className=\"green darken-3\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo center\">RAM vs Storage</a>\n                                <ul>\n                                    <li>\n                                        <NavLink \n                                            to=\"/RAM_Video\" \n                                            activeClassName=\"selected\">\n                                            Video\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink\n                                            to=\"/RAM_Revision\"\n                                            activeClassName=\"selected\">\n                                            Info Sheet    \n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/RAM_Quiz\" \n                                            activeClassName=\"selected\">\n                                            Quiz\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink \n                                            to=\"/RAM_Practical\" \n                                            activeClassName=\"selected\">\n                                            Practical\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>        \n                        <Switch>\n                            <Route path=\"/RAM_Video\">\n                                <RAM_Video />\n                            </Route>\n                            <Route path=\"/RAM_Revision\">\n                                <RAM_Revision />\n                            </Route>\n                            <Route path=\"/RAM_Quiz\">\n                                <RAM_Quiz />\n                            </Route>\n                            <Route path=\"/RAM_Practical\">\n                                <RAM_Practical />\n                            </Route>\n                        </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default Ram;","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink\r\n} from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\nimport CPU from './components/CPU/CPU';\r\nimport Computer from './components/Computer/Computer';\r\nimport Ram from './components/RAM/Ram';\r\n\r\nimport M from 'materialize-css';\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    let dropdowns = document.querySelectorAll(\".dropdown-trigger\");\r\n    let options = {\r\n      inDuration: 300,\r\n      outDuration: 225,\r\n      hover: true,\r\n      coverTrigger: false\r\n    };\r\n    M.Dropdown.init(dropdowns, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <nav className=\"green darken-3\">\r\n            <div className=\"nav-wrapper\">\r\n              <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\r\n                <li>\r\n                  <NavLink \r\n                    exact to=\"/\" \r\n                    activeClassName=\"selected\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/COMP_Video\" \r\n                    activeClassName=\"selected\">\r\n                    What's in a Computer?\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/CPU_Video\" \r\n                    activeClassName=\"selected\">\r\n                    CPU\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink \r\n                    to=\"/RAM_Video\" \r\n                    activeClassName=\"selected\">\r\n                    RAM vs Storage\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>        \r\n          <Switch>\r\n            <Route path=\"/COMP_Video\">\r\n              <Computer />\r\n            </Route>\r\n            <Route path=\"/CPU_Video\">\r\n              <CPU />\r\n            </Route>\r\n            <Route path=\"/Ram_Video\">\r\n              <Ram />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}